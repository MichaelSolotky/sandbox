
main:     file format elf32-i386


Disassembly of section .init:

08048314 <_init>:
 8048314:	53                   	push   ebx
 8048315:	83 ec 08             	sub    esp,0x8
 8048318:	e8 a3 00 00 00       	call   80483c0 <__x86.get_pc_thunk.bx>
 804831d:	81 c3 e3 1c 00 00    	add    ebx,0x1ce3
 8048323:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048329:	85 c0                	test   eax,eax
 804832b:	74 05                	je     8048332 <_init+0x1e>
 804832d:	e8 4e 00 00 00       	call   8048380 <__isoc99_scanf@plt+0x10>
 8048332:	83 c4 08             	add    esp,0x8
 8048335:	5b                   	pop    ebx
 8048336:	c3                   	ret    

Disassembly of section .plt:

08048340 <__stack_chk_fail@plt-0x10>:
 8048340:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 8048346:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 804834c:	00 00                	add    BYTE PTR [eax],al
	...

08048350 <__stack_chk_fail@plt>:
 8048350:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048356:	68 00 00 00 00       	push   0x0
 804835b:	e9 e0 ff ff ff       	jmp    8048340 <_init+0x2c>

08048360 <__libc_start_main@plt>:
 8048360:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048366:	68 08 00 00 00       	push   0x8
 804836b:	e9 d0 ff ff ff       	jmp    8048340 <_init+0x2c>

08048370 <__isoc99_scanf@plt>:
 8048370:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048376:	68 10 00 00 00       	push   0x10
 804837b:	e9 c0 ff ff ff       	jmp    8048340 <_init+0x2c>

Disassembly of section .plt.got:

08048380 <.plt.got>:
 8048380:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 8048386:	66 90                	xchg   ax,ax

Disassembly of section .text:

08048390 <_start>:
 8048390:	31 ed                	xor    ebp,ebp
 8048392:	5e                   	pop    esi
 8048393:	89 e1                	mov    ecx,esp
 8048395:	83 e4 f0             	and    esp,0xfffffff0
 8048398:	50                   	push   eax
 8048399:	54                   	push   esp
 804839a:	52                   	push   edx
 804839b:	68 60 85 04 08       	push   0x8048560
 80483a0:	68 00 85 04 08       	push   0x8048500
 80483a5:	51                   	push   ecx
 80483a6:	56                   	push   esi
 80483a7:	68 8b 84 04 08       	push   0x804848b
 80483ac:	e8 af ff ff ff       	call   8048360 <__libc_start_main@plt>
 80483b1:	f4                   	hlt    
 80483b2:	66 90                	xchg   ax,ax
 80483b4:	66 90                	xchg   ax,ax
 80483b6:	66 90                	xchg   ax,ax
 80483b8:	66 90                	xchg   ax,ax
 80483ba:	66 90                	xchg   ax,ax
 80483bc:	66 90                	xchg   ax,ax
 80483be:	66 90                	xchg   ax,ax

080483c0 <__x86.get_pc_thunk.bx>:
 80483c0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80483c3:	c3                   	ret    
 80483c4:	66 90                	xchg   ax,ax
 80483c6:	66 90                	xchg   ax,ax
 80483c8:	66 90                	xchg   ax,ax
 80483ca:	66 90                	xchg   ax,ax
 80483cc:	66 90                	xchg   ax,ax
 80483ce:	66 90                	xchg   ax,ax

080483d0 <deregister_tm_clones>:
 80483d0:	b8 23 a0 04 08       	mov    eax,0x804a023
 80483d5:	2d 20 a0 04 08       	sub    eax,0x804a020
 80483da:	83 f8 06             	cmp    eax,0x6
 80483dd:	76 1a                	jbe    80483f9 <deregister_tm_clones+0x29>
 80483df:	b8 00 00 00 00       	mov    eax,0x0
 80483e4:	85 c0                	test   eax,eax
 80483e6:	74 11                	je     80483f9 <deregister_tm_clones+0x29>
 80483e8:	55                   	push   ebp
 80483e9:	89 e5                	mov    ebp,esp
 80483eb:	83 ec 14             	sub    esp,0x14
 80483ee:	68 20 a0 04 08       	push   0x804a020
 80483f3:	ff d0                	call   eax
 80483f5:	83 c4 10             	add    esp,0x10
 80483f8:	c9                   	leave  
 80483f9:	f3 c3                	repz ret 
 80483fb:	90                   	nop
 80483fc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

08048400 <register_tm_clones>:
 8048400:	b8 20 a0 04 08       	mov    eax,0x804a020
 8048405:	2d 20 a0 04 08       	sub    eax,0x804a020
 804840a:	c1 f8 02             	sar    eax,0x2
 804840d:	89 c2                	mov    edx,eax
 804840f:	c1 ea 1f             	shr    edx,0x1f
 8048412:	01 d0                	add    eax,edx
 8048414:	d1 f8                	sar    eax,1
 8048416:	74 1b                	je     8048433 <register_tm_clones+0x33>
 8048418:	ba 00 00 00 00       	mov    edx,0x0
 804841d:	85 d2                	test   edx,edx
 804841f:	74 12                	je     8048433 <register_tm_clones+0x33>
 8048421:	55                   	push   ebp
 8048422:	89 e5                	mov    ebp,esp
 8048424:	83 ec 10             	sub    esp,0x10
 8048427:	50                   	push   eax
 8048428:	68 20 a0 04 08       	push   0x804a020
 804842d:	ff d2                	call   edx
 804842f:	83 c4 10             	add    esp,0x10
 8048432:	c9                   	leave  
 8048433:	f3 c3                	repz ret 
 8048435:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048439:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048440 <__do_global_dtors_aux>:
 8048440:	80 3d 20 a0 04 08 00 	cmp    BYTE PTR ds:0x804a020,0x0
 8048447:	75 13                	jne    804845c <__do_global_dtors_aux+0x1c>
 8048449:	55                   	push   ebp
 804844a:	89 e5                	mov    ebp,esp
 804844c:	83 ec 08             	sub    esp,0x8
 804844f:	e8 7c ff ff ff       	call   80483d0 <deregister_tm_clones>
 8048454:	c6 05 20 a0 04 08 01 	mov    BYTE PTR ds:0x804a020,0x1
 804845b:	c9                   	leave  
 804845c:	f3 c3                	repz ret 
 804845e:	66 90                	xchg   ax,ax

08048460 <frame_dummy>:
 8048460:	b8 10 9f 04 08       	mov    eax,0x8049f10
 8048465:	8b 10                	mov    edx,DWORD PTR [eax]
 8048467:	85 d2                	test   edx,edx
 8048469:	75 05                	jne    8048470 <frame_dummy+0x10>
 804846b:	eb 93                	jmp    8048400 <register_tm_clones>
 804846d:	8d 76 00             	lea    esi,[esi+0x0]
 8048470:	ba 00 00 00 00       	mov    edx,0x0
 8048475:	85 d2                	test   edx,edx
 8048477:	74 f2                	je     804846b <frame_dummy+0xb>
 8048479:	55                   	push   ebp
 804847a:	89 e5                	mov    ebp,esp
 804847c:	83 ec 14             	sub    esp,0x14
 804847f:	50                   	push   eax
 8048480:	ff d2                	call   edx
 8048482:	83 c4 10             	add    esp,0x10
 8048485:	c9                   	leave  
 8048486:	e9 75 ff ff ff       	jmp    8048400 <register_tm_clones>

0804848b <main>:
 804848b:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 804848f:	83 e4 f0             	and    esp,0xfffffff0
 8048492:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 8048495:	55                   	push   ebp
 8048496:	89 e5                	mov    ebp,esp
 8048498:	51                   	push   ecx
 8048499:	83 ec 24             	sub    esp,0x24
 804849c:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 80484a2:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 80484a5:	31 c0                	xor    eax,eax
 80484a7:	8d 45 e8             	lea    eax,[ebp-0x18]
 80484aa:	83 c0 04             	add    eax,0x4
 80484ad:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
 80484b0:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
 80484b3:	8b 00                	mov    eax,DWORD PTR [eax]
 80484b5:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
 80484b8:	83 ec 08             	sub    esp,0x8
 80484bb:	8d 45 e7             	lea    eax,[ebp-0x19]
 80484be:	50                   	push   eax
 80484bf:	68 80 85 04 08       	push   0x8048580
 80484c4:	e8 a7 fe ff ff       	call   8048370 <__isoc99_scanf@plt>
 80484c9:	83 c4 10             	add    esp,0x10
 80484cc:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
 80484cf:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
 80484d2:	89 10                	mov    DWORD PTR [eax],edx
 80484d4:	b8 00 00 00 00       	mov    eax,0x0
 80484d9:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
 80484dc:	65 33 0d 14 00 00 00 	xor    ecx,DWORD PTR gs:0x14
 80484e3:	74 05                	je     80484ea <main+0x5f>
 80484e5:	e8 66 fe ff ff       	call   8048350 <__stack_chk_fail@plt>
 80484ea:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 80484ed:	c9                   	leave  
 80484ee:	8d 61 fc             	lea    esp,[ecx-0x4]
 80484f1:	c3                   	ret    
 80484f2:	66 90                	xchg   ax,ax
 80484f4:	66 90                	xchg   ax,ax
 80484f6:	66 90                	xchg   ax,ax
 80484f8:	66 90                	xchg   ax,ax
 80484fa:	66 90                	xchg   ax,ax
 80484fc:	66 90                	xchg   ax,ax
 80484fe:	66 90                	xchg   ax,ax

08048500 <__libc_csu_init>:
 8048500:	55                   	push   ebp
 8048501:	57                   	push   edi
 8048502:	56                   	push   esi
 8048503:	53                   	push   ebx
 8048504:	e8 b7 fe ff ff       	call   80483c0 <__x86.get_pc_thunk.bx>
 8048509:	81 c3 f7 1a 00 00    	add    ebx,0x1af7
 804850f:	83 ec 0c             	sub    esp,0xc
 8048512:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 8048516:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804851c:	e8 f3 fd ff ff       	call   8048314 <_init>
 8048521:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048527:	29 c6                	sub    esi,eax
 8048529:	c1 fe 02             	sar    esi,0x2
 804852c:	85 f6                	test   esi,esi
 804852e:	74 25                	je     8048555 <__libc_csu_init+0x55>
 8048530:	31 ff                	xor    edi,edi
 8048532:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048538:	83 ec 04             	sub    esp,0x4
 804853b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804853f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048543:	55                   	push   ebp
 8048544:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 804854b:	83 c7 01             	add    edi,0x1
 804854e:	83 c4 10             	add    esp,0x10
 8048551:	39 f7                	cmp    edi,esi
 8048553:	75 e3                	jne    8048538 <__libc_csu_init+0x38>
 8048555:	83 c4 0c             	add    esp,0xc
 8048558:	5b                   	pop    ebx
 8048559:	5e                   	pop    esi
 804855a:	5f                   	pop    edi
 804855b:	5d                   	pop    ebp
 804855c:	c3                   	ret    
 804855d:	8d 76 00             	lea    esi,[esi+0x0]

08048560 <__libc_csu_fini>:
 8048560:	f3 c3                	repz ret 

Disassembly of section .fini:

08048564 <_fini>:
 8048564:	53                   	push   ebx
 8048565:	83 ec 08             	sub    esp,0x8
 8048568:	e8 53 fe ff ff       	call   80483c0 <__x86.get_pc_thunk.bx>
 804856d:	81 c3 93 1a 00 00    	add    ebx,0x1a93
 8048573:	83 c4 08             	add    esp,0x8
 8048576:	5b                   	pop    ebx
 8048577:	c3                   	ret    

main:     file format elf32-i386


Disassembly of section .init:

08048314 <_init>:
 8048314:	53                   	push   ebx
 8048315:	83 ec 08             	sub    esp,0x8
 8048318:	e8 a3 00 00 00       	call   80483c0 <__x86.get_pc_thunk.bx>
 804831d:	81 c3 e3 1c 00 00    	add    ebx,0x1ce3
 8048323:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048329:	85 c0                	test   eax,eax
 804832b:	74 05                	je     8048332 <_init+0x1e>
 804832d:	e8 4e 00 00 00       	call   8048380 <__isoc99_scanf@plt+0x10>
 8048332:	83 c4 08             	add    esp,0x8
 8048335:	5b                   	pop    ebx
 8048336:	c3                   	ret    

Disassembly of section .plt:

08048340 <__stack_chk_fail@plt-0x10>:
 8048340:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 8048346:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 804834c:	00 00                	add    BYTE PTR [eax],al
	...

08048350 <__stack_chk_fail@plt>:
 8048350:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048356:	68 00 00 00 00       	push   0x0
 804835b:	e9 e0 ff ff ff       	jmp    8048340 <_init+0x2c>

08048360 <__libc_start_main@plt>:
 8048360:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048366:	68 08 00 00 00       	push   0x8
 804836b:	e9 d0 ff ff ff       	jmp    8048340 <_init+0x2c>

08048370 <__isoc99_scanf@plt>:
 8048370:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048376:	68 10 00 00 00       	push   0x10
 804837b:	e9 c0 ff ff ff       	jmp    8048340 <_init+0x2c>

Disassembly of section .plt.got:

08048380 <.plt.got>:
 8048380:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 8048386:	66 90                	xchg   ax,ax

Disassembly of section .text:

08048390 <_start>:
 8048390:	31 ed                	xor    ebp,ebp
 8048392:	5e                   	pop    esi
 8048393:	89 e1                	mov    ecx,esp
 8048395:	83 e4 f0             	and    esp,0xfffffff0
 8048398:	50                   	push   eax
 8048399:	54                   	push   esp
 804839a:	52                   	push   edx
 804839b:	68 60 85 04 08       	push   0x8048560
 80483a0:	68 00 85 04 08       	push   0x8048500
 80483a5:	51                   	push   ecx
 80483a6:	56                   	push   esi
 80483a7:	68 8b 84 04 08       	push   0x804848b
 80483ac:	e8 af ff ff ff       	call   8048360 <__libc_start_main@plt>
 80483b1:	f4                   	hlt    
 80483b2:	66 90                	xchg   ax,ax
 80483b4:	66 90                	xchg   ax,ax
 80483b6:	66 90                	xchg   ax,ax
 80483b8:	66 90                	xchg   ax,ax
 80483ba:	66 90                	xchg   ax,ax
 80483bc:	66 90                	xchg   ax,ax
 80483be:	66 90                	xchg   ax,ax

080483c0 <__x86.get_pc_thunk.bx>:
 80483c0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80483c3:	c3                   	ret    
 80483c4:	66 90                	xchg   ax,ax
 80483c6:	66 90                	xchg   ax,ax
 80483c8:	66 90                	xchg   ax,ax
 80483ca:	66 90                	xchg   ax,ax
 80483cc:	66 90                	xchg   ax,ax
 80483ce:	66 90                	xchg   ax,ax

080483d0 <deregister_tm_clones>:
 80483d0:	b8 23 a0 04 08       	mov    eax,0x804a023
 80483d5:	2d 20 a0 04 08       	sub    eax,0x804a020
 80483da:	83 f8 06             	cmp    eax,0x6
 80483dd:	76 1a                	jbe    80483f9 <deregister_tm_clones+0x29>
 80483df:	b8 00 00 00 00       	mov    eax,0x0
 80483e4:	85 c0                	test   eax,eax
 80483e6:	74 11                	je     80483f9 <deregister_tm_clones+0x29>
 80483e8:	55                   	push   ebp
 80483e9:	89 e5                	mov    ebp,esp
 80483eb:	83 ec 14             	sub    esp,0x14
 80483ee:	68 20 a0 04 08       	push   0x804a020
 80483f3:	ff d0                	call   eax
 80483f5:	83 c4 10             	add    esp,0x10
 80483f8:	c9                   	leave  
 80483f9:	f3 c3                	repz ret 
 80483fb:	90                   	nop
 80483fc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

08048400 <register_tm_clones>:
 8048400:	b8 20 a0 04 08       	mov    eax,0x804a020
 8048405:	2d 20 a0 04 08       	sub    eax,0x804a020
 804840a:	c1 f8 02             	sar    eax,0x2
 804840d:	89 c2                	mov    edx,eax
 804840f:	c1 ea 1f             	shr    edx,0x1f
 8048412:	01 d0                	add    eax,edx
 8048414:	d1 f8                	sar    eax,1
 8048416:	74 1b                	je     8048433 <register_tm_clones+0x33>
 8048418:	ba 00 00 00 00       	mov    edx,0x0
 804841d:	85 d2                	test   edx,edx
 804841f:	74 12                	je     8048433 <register_tm_clones+0x33>
 8048421:	55                   	push   ebp
 8048422:	89 e5                	mov    ebp,esp
 8048424:	83 ec 10             	sub    esp,0x10
 8048427:	50                   	push   eax
 8048428:	68 20 a0 04 08       	push   0x804a020
 804842d:	ff d2                	call   edx
 804842f:	83 c4 10             	add    esp,0x10
 8048432:	c9                   	leave  
 8048433:	f3 c3                	repz ret 
 8048435:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048439:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048440 <__do_global_dtors_aux>:
 8048440:	80 3d 20 a0 04 08 00 	cmp    BYTE PTR ds:0x804a020,0x0
 8048447:	75 13                	jne    804845c <__do_global_dtors_aux+0x1c>
 8048449:	55                   	push   ebp
 804844a:	89 e5                	mov    ebp,esp
 804844c:	83 ec 08             	sub    esp,0x8
 804844f:	e8 7c ff ff ff       	call   80483d0 <deregister_tm_clones>
 8048454:	c6 05 20 a0 04 08 01 	mov    BYTE PTR ds:0x804a020,0x1
 804845b:	c9                   	leave  
 804845c:	f3 c3                	repz ret 
 804845e:	66 90                	xchg   ax,ax

08048460 <frame_dummy>:
 8048460:	b8 10 9f 04 08       	mov    eax,0x8049f10
 8048465:	8b 10                	mov    edx,DWORD PTR [eax]
 8048467:	85 d2                	test   edx,edx
 8048469:	75 05                	jne    8048470 <frame_dummy+0x10>
 804846b:	eb 93                	jmp    8048400 <register_tm_clones>
 804846d:	8d 76 00             	lea    esi,[esi+0x0]
 8048470:	ba 00 00 00 00       	mov    edx,0x0
 8048475:	85 d2                	test   edx,edx
 8048477:	74 f2                	je     804846b <frame_dummy+0xb>
 8048479:	55                   	push   ebp
 804847a:	89 e5                	mov    ebp,esp
 804847c:	83 ec 14             	sub    esp,0x14
 804847f:	50                   	push   eax
 8048480:	ff d2                	call   edx
 8048482:	83 c4 10             	add    esp,0x10
 8048485:	c9                   	leave  
 8048486:	e9 75 ff ff ff       	jmp    8048400 <register_tm_clones>

0804848b <main>:
 804848b:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 804848f:	83 e4 f0             	and    esp,0xfffffff0
 8048492:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 8048495:	55                   	push   ebp
 8048496:	89 e5                	mov    ebp,esp
 8048498:	51                   	push   ecx
 8048499:	83 ec 24             	sub    esp,0x24
 804849c:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 80484a2:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 80484a5:	31 c0                	xor    eax,eax
 80484a7:	8d 45 e8             	lea    eax,[ebp-0x18]
 80484aa:	83 c0 04             	add    eax,0x4
 80484ad:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
 80484b0:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
 80484b3:	8b 00                	mov    eax,DWORD PTR [eax]
 80484b5:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
 80484b8:	83 ec 08             	sub    esp,0x8
 80484bb:	8d 45 e7             	lea    eax,[ebp-0x19]
 80484be:	50                   	push   eax
 80484bf:	68 80 85 04 08       	push   0x8048580
 80484c4:	e8 a7 fe ff ff       	call   8048370 <__isoc99_scanf@plt>
 80484c9:	83 c4 10             	add    esp,0x10
 80484cc:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
 80484cf:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
 80484d2:	89 10                	mov    DWORD PTR [eax],edx
 80484d4:	b8 00 00 00 00       	mov    eax,0x0
 80484d9:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
 80484dc:	65 33 0d 14 00 00 00 	xor    ecx,DWORD PTR gs:0x14
 80484e3:	74 05                	je     80484ea <main+0x5f>
 80484e5:	e8 66 fe ff ff       	call   8048350 <__stack_chk_fail@plt>
 80484ea:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 80484ed:	c9                   	leave  
 80484ee:	8d 61 fc             	lea    esp,[ecx-0x4]
 80484f1:	c3                   	ret    
 80484f2:	66 90                	xchg   ax,ax
 80484f4:	66 90                	xchg   ax,ax
 80484f6:	66 90                	xchg   ax,ax
 80484f8:	66 90                	xchg   ax,ax
 80484fa:	66 90                	xchg   ax,ax
 80484fc:	66 90                	xchg   ax,ax
 80484fe:	66 90                	xchg   ax,ax

08048500 <__libc_csu_init>:
 8048500:	55                   	push   ebp
 8048501:	57                   	push   edi
 8048502:	56                   	push   esi
 8048503:	53                   	push   ebx
 8048504:	e8 b7 fe ff ff       	call   80483c0 <__x86.get_pc_thunk.bx>
 8048509:	81 c3 f7 1a 00 00    	add    ebx,0x1af7
 804850f:	83 ec 0c             	sub    esp,0xc
 8048512:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 8048516:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804851c:	e8 f3 fd ff ff       	call   8048314 <_init>
 8048521:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048527:	29 c6                	sub    esi,eax
 8048529:	c1 fe 02             	sar    esi,0x2
 804852c:	85 f6                	test   esi,esi
 804852e:	74 25                	je     8048555 <__libc_csu_init+0x55>
 8048530:	31 ff                	xor    edi,edi
 8048532:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048538:	83 ec 04             	sub    esp,0x4
 804853b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804853f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048543:	55                   	push   ebp
 8048544:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 804854b:	83 c7 01             	add    edi,0x1
 804854e:	83 c4 10             	add    esp,0x10
 8048551:	39 f7                	cmp    edi,esi
 8048553:	75 e3                	jne    8048538 <__libc_csu_init+0x38>
 8048555:	83 c4 0c             	add    esp,0xc
 8048558:	5b                   	pop    ebx
 8048559:	5e                   	pop    esi
 804855a:	5f                   	pop    edi
 804855b:	5d                   	pop    ebp
 804855c:	c3                   	ret    
 804855d:	8d 76 00             	lea    esi,[esi+0x0]

08048560 <__libc_csu_fini>:
 8048560:	f3 c3                	repz ret 

Disassembly of section .fini:

08048564 <_fini>:
 8048564:	53                   	push   ebx
 8048565:	83 ec 08             	sub    esp,0x8
 8048568:	e8 53 fe ff ff       	call   80483c0 <__x86.get_pc_thunk.bx>
 804856d:	81 c3 93 1a 00 00    	add    ebx,0x1a93
 8048573:	83 c4 08             	add    esp,0x8
 8048576:	5b                   	pop    ebx
 8048577:	c3                   	ret    

main:     file format elf64-x86-64


Disassembly of section .init:

0000000000400448 <_init>:
  400448:	48 83 ec 08          	sub    rsp,0x8
  40044c:	48 8b 05 a5 0b 20 00 	mov    rax,QWORD PTR [rip+0x200ba5]        # 600ff8 <_DYNAMIC+0x1d0>
  400453:	48 85 c0             	test   rax,rax
  400456:	74 05                	je     40045d <_init+0x15>
  400458:	e8 53 00 00 00       	call   4004b0 <__isoc99_scanf@plt+0x10>
  40045d:	48 83 c4 08          	add    rsp,0x8
  400461:	c3                   	ret    

Disassembly of section .plt:

0000000000400470 <__stack_chk_fail@plt-0x10>:
  400470:	ff 35 92 0b 20 00    	push   QWORD PTR [rip+0x200b92]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400476:	ff 25 94 0b 20 00    	jmp    QWORD PTR [rip+0x200b94]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40047c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400480 <__stack_chk_fail@plt>:
  400480:	ff 25 92 0b 20 00    	jmp    QWORD PTR [rip+0x200b92]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400486:	68 00 00 00 00       	push   0x0
  40048b:	e9 e0 ff ff ff       	jmp    400470 <_init+0x28>

0000000000400490 <__libc_start_main@plt>:
  400490:	ff 25 8a 0b 20 00    	jmp    QWORD PTR [rip+0x200b8a]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400496:	68 01 00 00 00       	push   0x1
  40049b:	e9 d0 ff ff ff       	jmp    400470 <_init+0x28>

00000000004004a0 <__isoc99_scanf@plt>:
  4004a0:	ff 25 82 0b 20 00    	jmp    QWORD PTR [rip+0x200b82]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004a6:	68 02 00 00 00       	push   0x2
  4004ab:	e9 c0 ff ff ff       	jmp    400470 <_init+0x28>

Disassembly of section .plt.got:

00000000004004b0 <.plt.got>:
  4004b0:	ff 25 42 0b 20 00    	jmp    QWORD PTR [rip+0x200b42]        # 600ff8 <_DYNAMIC+0x1d0>
  4004b6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000004004c0 <_start>:
  4004c0:	31 ed                	xor    ebp,ebp
  4004c2:	49 89 d1             	mov    r9,rdx
  4004c5:	5e                   	pop    rsi
  4004c6:	48 89 e2             	mov    rdx,rsp
  4004c9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  4004cd:	50                   	push   rax
  4004ce:	54                   	push   rsp
  4004cf:	49 c7 c0 90 06 40 00 	mov    r8,0x400690
  4004d6:	48 c7 c1 20 06 40 00 	mov    rcx,0x400620
  4004dd:	48 c7 c7 b6 05 40 00 	mov    rdi,0x4005b6
  4004e4:	e8 a7 ff ff ff       	call   400490 <__libc_start_main@plt>
  4004e9:	f4                   	hlt    
  4004ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000004004f0 <deregister_tm_clones>:
  4004f0:	b8 47 10 60 00       	mov    eax,0x601047
  4004f5:	55                   	push   rbp
  4004f6:	48 2d 40 10 60 00    	sub    rax,0x601040
  4004fc:	48 83 f8 0e          	cmp    rax,0xe
  400500:	48 89 e5             	mov    rbp,rsp
  400503:	76 1b                	jbe    400520 <deregister_tm_clones+0x30>
  400505:	b8 00 00 00 00       	mov    eax,0x0
  40050a:	48 85 c0             	test   rax,rax
  40050d:	74 11                	je     400520 <deregister_tm_clones+0x30>
  40050f:	5d                   	pop    rbp
  400510:	bf 40 10 60 00       	mov    edi,0x601040
  400515:	ff e0                	jmp    rax
  400517:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40051e:	00 00 
  400520:	5d                   	pop    rbp
  400521:	c3                   	ret    
  400522:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400526:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40052d:	00 00 00 

0000000000400530 <register_tm_clones>:
  400530:	be 40 10 60 00       	mov    esi,0x601040
  400535:	55                   	push   rbp
  400536:	48 81 ee 40 10 60 00 	sub    rsi,0x601040
  40053d:	48 c1 fe 03          	sar    rsi,0x3
  400541:	48 89 e5             	mov    rbp,rsp
  400544:	48 89 f0             	mov    rax,rsi
  400547:	48 c1 e8 3f          	shr    rax,0x3f
  40054b:	48 01 c6             	add    rsi,rax
  40054e:	48 d1 fe             	sar    rsi,1
  400551:	74 15                	je     400568 <register_tm_clones+0x38>
  400553:	b8 00 00 00 00       	mov    eax,0x0
  400558:	48 85 c0             	test   rax,rax
  40055b:	74 0b                	je     400568 <register_tm_clones+0x38>
  40055d:	5d                   	pop    rbp
  40055e:	bf 40 10 60 00       	mov    edi,0x601040
  400563:	ff e0                	jmp    rax
  400565:	0f 1f 00             	nop    DWORD PTR [rax]
  400568:	5d                   	pop    rbp
  400569:	c3                   	ret    
  40056a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400570 <__do_global_dtors_aux>:
  400570:	80 3d c9 0a 20 00 00 	cmp    BYTE PTR [rip+0x200ac9],0x0        # 601040 <__TMC_END__>
  400577:	75 11                	jne    40058a <__do_global_dtors_aux+0x1a>
  400579:	55                   	push   rbp
  40057a:	48 89 e5             	mov    rbp,rsp
  40057d:	e8 6e ff ff ff       	call   4004f0 <deregister_tm_clones>
  400582:	5d                   	pop    rbp
  400583:	c6 05 b6 0a 20 00 01 	mov    BYTE PTR [rip+0x200ab6],0x1        # 601040 <__TMC_END__>
  40058a:	f3 c3                	repz ret 
  40058c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400590 <frame_dummy>:
  400590:	bf 20 0e 60 00       	mov    edi,0x600e20
  400595:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400599:	75 05                	jne    4005a0 <frame_dummy+0x10>
  40059b:	eb 93                	jmp    400530 <register_tm_clones>
  40059d:	0f 1f 00             	nop    DWORD PTR [rax]
  4005a0:	b8 00 00 00 00       	mov    eax,0x0
  4005a5:	48 85 c0             	test   rax,rax
  4005a8:	74 f1                	je     40059b <frame_dummy+0xb>
  4005aa:	55                   	push   rbp
  4005ab:	48 89 e5             	mov    rbp,rsp
  4005ae:	ff d0                	call   rax
  4005b0:	5d                   	pop    rbp
  4005b1:	e9 7a ff ff ff       	jmp    400530 <register_tm_clones>

00000000004005b6 <main>:
  4005b6:	55                   	push   rbp
  4005b7:	48 89 e5             	mov    rbp,rsp
  4005ba:	48 83 ec 20          	sub    rsp,0x20
  4005be:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  4005c5:	00 00 
  4005c7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4005cb:	31 c0                	xor    eax,eax
  4005cd:	48 8d 45 e8          	lea    rax,[rbp-0x18]
  4005d1:	48 83 c0 04          	add    rax,0x4
  4005d5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  4005d9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4005dd:	8b 00                	mov    eax,DWORD PTR [rax]
  4005df:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
  4005e2:	48 8d 45 e7          	lea    rax,[rbp-0x19]
  4005e6:	48 89 c6             	mov    rsi,rax
  4005e9:	bf a4 06 40 00       	mov    edi,0x4006a4
  4005ee:	b8 00 00 00 00       	mov    eax,0x0
  4005f3:	e8 a8 fe ff ff       	call   4004a0 <__isoc99_scanf@plt>
  4005f8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4005fc:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
  4005ff:	89 10                	mov    DWORD PTR [rax],edx
  400601:	b8 00 00 00 00       	mov    eax,0x0
  400606:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  40060a:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
  400611:	00 00 
  400613:	74 05                	je     40061a <main+0x64>
  400615:	e8 66 fe ff ff       	call   400480 <__stack_chk_fail@plt>
  40061a:	c9                   	leave  
  40061b:	c3                   	ret    
  40061c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400620 <__libc_csu_init>:
  400620:	41 57                	push   r15
  400622:	41 56                	push   r14
  400624:	41 89 ff             	mov    r15d,edi
  400627:	41 55                	push   r13
  400629:	41 54                	push   r12
  40062b:	4c 8d 25 de 07 20 00 	lea    r12,[rip+0x2007de]        # 600e10 <__frame_dummy_init_array_entry>
  400632:	55                   	push   rbp
  400633:	48 8d 2d de 07 20 00 	lea    rbp,[rip+0x2007de]        # 600e18 <__init_array_end>
  40063a:	53                   	push   rbx
  40063b:	49 89 f6             	mov    r14,rsi
  40063e:	49 89 d5             	mov    r13,rdx
  400641:	4c 29 e5             	sub    rbp,r12
  400644:	48 83 ec 08          	sub    rsp,0x8
  400648:	48 c1 fd 03          	sar    rbp,0x3
  40064c:	e8 f7 fd ff ff       	call   400448 <_init>
  400651:	48 85 ed             	test   rbp,rbp
  400654:	74 20                	je     400676 <__libc_csu_init+0x56>
  400656:	31 db                	xor    ebx,ebx
  400658:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40065f:	00 
  400660:	4c 89 ea             	mov    rdx,r13
  400663:	4c 89 f6             	mov    rsi,r14
  400666:	44 89 ff             	mov    edi,r15d
  400669:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40066d:	48 83 c3 01          	add    rbx,0x1
  400671:	48 39 eb             	cmp    rbx,rbp
  400674:	75 ea                	jne    400660 <__libc_csu_init+0x40>
  400676:	48 83 c4 08          	add    rsp,0x8
  40067a:	5b                   	pop    rbx
  40067b:	5d                   	pop    rbp
  40067c:	41 5c                	pop    r12
  40067e:	41 5d                	pop    r13
  400680:	41 5e                	pop    r14
  400682:	41 5f                	pop    r15
  400684:	c3                   	ret    
  400685:	90                   	nop
  400686:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40068d:	00 00 00 

0000000000400690 <__libc_csu_fini>:
  400690:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400694 <_fini>:
  400694:	48 83 ec 08          	sub    rsp,0x8
  400698:	48 83 c4 08          	add    rsp,0x8
  40069c:	c3                   	ret    

main:     file format elf64-x86-64


Disassembly of section .init:

0000000000400448 <_init>:
  400448:	48 83 ec 08          	sub    $0x8,%rsp
  40044c:	48 8b 05 a5 0b 20 00 	mov    0x200ba5(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  400453:	48 85 c0             	test   %rax,%rax
  400456:	74 05                	je     40045d <_init+0x15>
  400458:	e8 53 00 00 00       	callq  4004b0 <__isoc99_scanf@plt+0x10>
  40045d:	48 83 c4 08          	add    $0x8,%rsp
  400461:	c3                   	retq   

Disassembly of section .plt:

0000000000400470 <__stack_chk_fail@plt-0x10>:
  400470:	ff 35 92 0b 20 00    	pushq  0x200b92(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400476:	ff 25 94 0b 20 00    	jmpq   *0x200b94(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40047c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400480 <__stack_chk_fail@plt>:
  400480:	ff 25 92 0b 20 00    	jmpq   *0x200b92(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400486:	68 00 00 00 00       	pushq  $0x0
  40048b:	e9 e0 ff ff ff       	jmpq   400470 <_init+0x28>

0000000000400490 <__libc_start_main@plt>:
  400490:	ff 25 8a 0b 20 00    	jmpq   *0x200b8a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400496:	68 01 00 00 00       	pushq  $0x1
  40049b:	e9 d0 ff ff ff       	jmpq   400470 <_init+0x28>

00000000004004a0 <__isoc99_scanf@plt>:
  4004a0:	ff 25 82 0b 20 00    	jmpq   *0x200b82(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004a6:	68 02 00 00 00       	pushq  $0x2
  4004ab:	e9 c0 ff ff ff       	jmpq   400470 <_init+0x28>

Disassembly of section .plt.got:

00000000004004b0 <.plt.got>:
  4004b0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  4004b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000004004c0 <_start>:
  4004c0:	31 ed                	xor    %ebp,%ebp
  4004c2:	49 89 d1             	mov    %rdx,%r9
  4004c5:	5e                   	pop    %rsi
  4004c6:	48 89 e2             	mov    %rsp,%rdx
  4004c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4004cd:	50                   	push   %rax
  4004ce:	54                   	push   %rsp
  4004cf:	49 c7 c0 90 06 40 00 	mov    $0x400690,%r8
  4004d6:	48 c7 c1 20 06 40 00 	mov    $0x400620,%rcx
  4004dd:	48 c7 c7 b6 05 40 00 	mov    $0x4005b6,%rdi
  4004e4:	e8 a7 ff ff ff       	callq  400490 <__libc_start_main@plt>
  4004e9:	f4                   	hlt    
  4004ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004f0 <deregister_tm_clones>:
  4004f0:	b8 47 10 60 00       	mov    $0x601047,%eax
  4004f5:	55                   	push   %rbp
  4004f6:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  4004fc:	48 83 f8 0e          	cmp    $0xe,%rax
  400500:	48 89 e5             	mov    %rsp,%rbp
  400503:	76 1b                	jbe    400520 <deregister_tm_clones+0x30>
  400505:	b8 00 00 00 00       	mov    $0x0,%eax
  40050a:	48 85 c0             	test   %rax,%rax
  40050d:	74 11                	je     400520 <deregister_tm_clones+0x30>
  40050f:	5d                   	pop    %rbp
  400510:	bf 40 10 60 00       	mov    $0x601040,%edi
  400515:	ff e0                	jmpq   *%rax
  400517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40051e:	00 00 
  400520:	5d                   	pop    %rbp
  400521:	c3                   	retq   
  400522:	0f 1f 40 00          	nopl   0x0(%rax)
  400526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40052d:	00 00 00 

0000000000400530 <register_tm_clones>:
  400530:	be 40 10 60 00       	mov    $0x601040,%esi
  400535:	55                   	push   %rbp
  400536:	48 81 ee 40 10 60 00 	sub    $0x601040,%rsi
  40053d:	48 c1 fe 03          	sar    $0x3,%rsi
  400541:	48 89 e5             	mov    %rsp,%rbp
  400544:	48 89 f0             	mov    %rsi,%rax
  400547:	48 c1 e8 3f          	shr    $0x3f,%rax
  40054b:	48 01 c6             	add    %rax,%rsi
  40054e:	48 d1 fe             	sar    %rsi
  400551:	74 15                	je     400568 <register_tm_clones+0x38>
  400553:	b8 00 00 00 00       	mov    $0x0,%eax
  400558:	48 85 c0             	test   %rax,%rax
  40055b:	74 0b                	je     400568 <register_tm_clones+0x38>
  40055d:	5d                   	pop    %rbp
  40055e:	bf 40 10 60 00       	mov    $0x601040,%edi
  400563:	ff e0                	jmpq   *%rax
  400565:	0f 1f 00             	nopl   (%rax)
  400568:	5d                   	pop    %rbp
  400569:	c3                   	retq   
  40056a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400570 <__do_global_dtors_aux>:
  400570:	80 3d c9 0a 20 00 00 	cmpb   $0x0,0x200ac9(%rip)        # 601040 <__TMC_END__>
  400577:	75 11                	jne    40058a <__do_global_dtors_aux+0x1a>
  400579:	55                   	push   %rbp
  40057a:	48 89 e5             	mov    %rsp,%rbp
  40057d:	e8 6e ff ff ff       	callq  4004f0 <deregister_tm_clones>
  400582:	5d                   	pop    %rbp
  400583:	c6 05 b6 0a 20 00 01 	movb   $0x1,0x200ab6(%rip)        # 601040 <__TMC_END__>
  40058a:	f3 c3                	repz retq 
  40058c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400590 <frame_dummy>:
  400590:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400595:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400599:	75 05                	jne    4005a0 <frame_dummy+0x10>
  40059b:	eb 93                	jmp    400530 <register_tm_clones>
  40059d:	0f 1f 00             	nopl   (%rax)
  4005a0:	b8 00 00 00 00       	mov    $0x0,%eax
  4005a5:	48 85 c0             	test   %rax,%rax
  4005a8:	74 f1                	je     40059b <frame_dummy+0xb>
  4005aa:	55                   	push   %rbp
  4005ab:	48 89 e5             	mov    %rsp,%rbp
  4005ae:	ff d0                	callq  *%rax
  4005b0:	5d                   	pop    %rbp
  4005b1:	e9 7a ff ff ff       	jmpq   400530 <register_tm_clones>

00000000004005b6 <main>:
  4005b6:	55                   	push   %rbp
  4005b7:	48 89 e5             	mov    %rsp,%rbp
  4005ba:	48 83 ec 20          	sub    $0x20,%rsp
  4005be:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4005c5:	00 00 
  4005c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4005cb:	31 c0                	xor    %eax,%eax
  4005cd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  4005d1:	48 83 c0 04          	add    $0x4,%rax
  4005d5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4005d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4005dd:	8b 00                	mov    (%rax),%eax
  4005df:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4005e2:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
  4005e6:	48 89 c6             	mov    %rax,%rsi
  4005e9:	bf a4 06 40 00       	mov    $0x4006a4,%edi
  4005ee:	b8 00 00 00 00       	mov    $0x0,%eax
  4005f3:	e8 a8 fe ff ff       	callq  4004a0 <__isoc99_scanf@plt>
  4005f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4005fc:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4005ff:	89 10                	mov    %edx,(%rax)
  400601:	b8 00 00 00 00       	mov    $0x0,%eax
  400606:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40060a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  400611:	00 00 
  400613:	74 05                	je     40061a <main+0x64>
  400615:	e8 66 fe ff ff       	callq  400480 <__stack_chk_fail@plt>
  40061a:	c9                   	leaveq 
  40061b:	c3                   	retq   
  40061c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400620 <__libc_csu_init>:
  400620:	41 57                	push   %r15
  400622:	41 56                	push   %r14
  400624:	41 89 ff             	mov    %edi,%r15d
  400627:	41 55                	push   %r13
  400629:	41 54                	push   %r12
  40062b:	4c 8d 25 de 07 20 00 	lea    0x2007de(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400632:	55                   	push   %rbp
  400633:	48 8d 2d de 07 20 00 	lea    0x2007de(%rip),%rbp        # 600e18 <__init_array_end>
  40063a:	53                   	push   %rbx
  40063b:	49 89 f6             	mov    %rsi,%r14
  40063e:	49 89 d5             	mov    %rdx,%r13
  400641:	4c 29 e5             	sub    %r12,%rbp
  400644:	48 83 ec 08          	sub    $0x8,%rsp
  400648:	48 c1 fd 03          	sar    $0x3,%rbp
  40064c:	e8 f7 fd ff ff       	callq  400448 <_init>
  400651:	48 85 ed             	test   %rbp,%rbp
  400654:	74 20                	je     400676 <__libc_csu_init+0x56>
  400656:	31 db                	xor    %ebx,%ebx
  400658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40065f:	00 
  400660:	4c 89 ea             	mov    %r13,%rdx
  400663:	4c 89 f6             	mov    %r14,%rsi
  400666:	44 89 ff             	mov    %r15d,%edi
  400669:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40066d:	48 83 c3 01          	add    $0x1,%rbx
  400671:	48 39 eb             	cmp    %rbp,%rbx
  400674:	75 ea                	jne    400660 <__libc_csu_init+0x40>
  400676:	48 83 c4 08          	add    $0x8,%rsp
  40067a:	5b                   	pop    %rbx
  40067b:	5d                   	pop    %rbp
  40067c:	41 5c                	pop    %r12
  40067e:	41 5d                	pop    %r13
  400680:	41 5e                	pop    %r14
  400682:	41 5f                	pop    %r15
  400684:	c3                   	retq   
  400685:	90                   	nop
  400686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40068d:	00 00 00 

0000000000400690 <__libc_csu_fini>:
  400690:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400694 <_fini>:
  400694:	48 83 ec 08          	sub    $0x8,%rsp
  400698:	48 83 c4 08          	add    $0x8,%rsp
  40069c:	c3                   	retq   

main:     file format elf64-x86-64


Disassembly of section .init:

0000000000400448 <_init>:
  400448:	48 83 ec 08          	sub    $0x8,%rsp
  40044c:	48 8b 05 a5 0b 20 00 	mov    0x200ba5(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  400453:	48 85 c0             	test   %rax,%rax
  400456:	74 05                	je     40045d <_init+0x15>
  400458:	e8 53 00 00 00       	callq  4004b0 <__isoc99_scanf@plt+0x10>
  40045d:	48 83 c4 08          	add    $0x8,%rsp
  400461:	c3                   	retq   

Disassembly of section .plt:

0000000000400470 <__stack_chk_fail@plt-0x10>:
  400470:	ff 35 92 0b 20 00    	pushq  0x200b92(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400476:	ff 25 94 0b 20 00    	jmpq   *0x200b94(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40047c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400480 <__stack_chk_fail@plt>:
  400480:	ff 25 92 0b 20 00    	jmpq   *0x200b92(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400486:	68 00 00 00 00       	pushq  $0x0
  40048b:	e9 e0 ff ff ff       	jmpq   400470 <_init+0x28>

0000000000400490 <__libc_start_main@plt>:
  400490:	ff 25 8a 0b 20 00    	jmpq   *0x200b8a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400496:	68 01 00 00 00       	pushq  $0x1
  40049b:	e9 d0 ff ff ff       	jmpq   400470 <_init+0x28>

00000000004004a0 <__isoc99_scanf@plt>:
  4004a0:	ff 25 82 0b 20 00    	jmpq   *0x200b82(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004a6:	68 02 00 00 00       	pushq  $0x2
  4004ab:	e9 c0 ff ff ff       	jmpq   400470 <_init+0x28>

Disassembly of section .plt.got:

00000000004004b0 <.plt.got>:
  4004b0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  4004b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000004004c0 <_start>:
  4004c0:	31 ed                	xor    %ebp,%ebp
  4004c2:	49 89 d1             	mov    %rdx,%r9
  4004c5:	5e                   	pop    %rsi
  4004c6:	48 89 e2             	mov    %rsp,%rdx
  4004c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4004cd:	50                   	push   %rax
  4004ce:	54                   	push   %rsp
  4004cf:	49 c7 c0 90 06 40 00 	mov    $0x400690,%r8
  4004d6:	48 c7 c1 20 06 40 00 	mov    $0x400620,%rcx
  4004dd:	48 c7 c7 b6 05 40 00 	mov    $0x4005b6,%rdi
  4004e4:	e8 a7 ff ff ff       	callq  400490 <__libc_start_main@plt>
  4004e9:	f4                   	hlt    
  4004ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004f0 <deregister_tm_clones>:
  4004f0:	b8 47 10 60 00       	mov    $0x601047,%eax
  4004f5:	55                   	push   %rbp
  4004f6:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  4004fc:	48 83 f8 0e          	cmp    $0xe,%rax
  400500:	48 89 e5             	mov    %rsp,%rbp
  400503:	76 1b                	jbe    400520 <deregister_tm_clones+0x30>
  400505:	b8 00 00 00 00       	mov    $0x0,%eax
  40050a:	48 85 c0             	test   %rax,%rax
  40050d:	74 11                	je     400520 <deregister_tm_clones+0x30>
  40050f:	5d                   	pop    %rbp
  400510:	bf 40 10 60 00       	mov    $0x601040,%edi
  400515:	ff e0                	jmpq   *%rax
  400517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40051e:	00 00 
  400520:	5d                   	pop    %rbp
  400521:	c3                   	retq   
  400522:	0f 1f 40 00          	nopl   0x0(%rax)
  400526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40052d:	00 00 00 

0000000000400530 <register_tm_clones>:
  400530:	be 40 10 60 00       	mov    $0x601040,%esi
  400535:	55                   	push   %rbp
  400536:	48 81 ee 40 10 60 00 	sub    $0x601040,%rsi
  40053d:	48 c1 fe 03          	sar    $0x3,%rsi
  400541:	48 89 e5             	mov    %rsp,%rbp
  400544:	48 89 f0             	mov    %rsi,%rax
  400547:	48 c1 e8 3f          	shr    $0x3f,%rax
  40054b:	48 01 c6             	add    %rax,%rsi
  40054e:	48 d1 fe             	sar    %rsi
  400551:	74 15                	je     400568 <register_tm_clones+0x38>
  400553:	b8 00 00 00 00       	mov    $0x0,%eax
  400558:	48 85 c0             	test   %rax,%rax
  40055b:	74 0b                	je     400568 <register_tm_clones+0x38>
  40055d:	5d                   	pop    %rbp
  40055e:	bf 40 10 60 00       	mov    $0x601040,%edi
  400563:	ff e0                	jmpq   *%rax
  400565:	0f 1f 00             	nopl   (%rax)
  400568:	5d                   	pop    %rbp
  400569:	c3                   	retq   
  40056a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400570 <__do_global_dtors_aux>:
  400570:	80 3d c9 0a 20 00 00 	cmpb   $0x0,0x200ac9(%rip)        # 601040 <__TMC_END__>
  400577:	75 11                	jne    40058a <__do_global_dtors_aux+0x1a>
  400579:	55                   	push   %rbp
  40057a:	48 89 e5             	mov    %rsp,%rbp
  40057d:	e8 6e ff ff ff       	callq  4004f0 <deregister_tm_clones>
  400582:	5d                   	pop    %rbp
  400583:	c6 05 b6 0a 20 00 01 	movb   $0x1,0x200ab6(%rip)        # 601040 <__TMC_END__>
  40058a:	f3 c3                	repz retq 
  40058c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400590 <frame_dummy>:
  400590:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400595:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400599:	75 05                	jne    4005a0 <frame_dummy+0x10>
  40059b:	eb 93                	jmp    400530 <register_tm_clones>
  40059d:	0f 1f 00             	nopl   (%rax)
  4005a0:	b8 00 00 00 00       	mov    $0x0,%eax
  4005a5:	48 85 c0             	test   %rax,%rax
  4005a8:	74 f1                	je     40059b <frame_dummy+0xb>
  4005aa:	55                   	push   %rbp
  4005ab:	48 89 e5             	mov    %rsp,%rbp
  4005ae:	ff d0                	callq  *%rax
  4005b0:	5d                   	pop    %rbp
  4005b1:	e9 7a ff ff ff       	jmpq   400530 <register_tm_clones>

00000000004005b6 <main>:
  4005b6:	55                   	push   %rbp
  4005b7:	48 89 e5             	mov    %rsp,%rbp
  4005ba:	48 83 ec 20          	sub    $0x20,%rsp
  4005be:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4005c5:	00 00 
  4005c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4005cb:	31 c0                	xor    %eax,%eax
  4005cd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  4005d1:	48 83 c0 04          	add    $0x4,%rax
  4005d5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4005d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4005dd:	8b 00                	mov    (%rax),%eax
  4005df:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4005e2:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
  4005e6:	48 89 c6             	mov    %rax,%rsi
  4005e9:	bf a4 06 40 00       	mov    $0x4006a4,%edi
  4005ee:	b8 00 00 00 00       	mov    $0x0,%eax
  4005f3:	e8 a8 fe ff ff       	callq  4004a0 <__isoc99_scanf@plt>
  4005f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4005fc:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4005ff:	89 10                	mov    %edx,(%rax)
  400601:	b8 00 00 00 00       	mov    $0x0,%eax
  400606:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40060a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  400611:	00 00 
  400613:	74 05                	je     40061a <main+0x64>
  400615:	e8 66 fe ff ff       	callq  400480 <__stack_chk_fail@plt>
  40061a:	c9                   	leaveq 
  40061b:	c3                   	retq   
  40061c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400620 <__libc_csu_init>:
  400620:	41 57                	push   %r15
  400622:	41 56                	push   %r14
  400624:	41 89 ff             	mov    %edi,%r15d
  400627:	41 55                	push   %r13
  400629:	41 54                	push   %r12
  40062b:	4c 8d 25 de 07 20 00 	lea    0x2007de(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400632:	55                   	push   %rbp
  400633:	48 8d 2d de 07 20 00 	lea    0x2007de(%rip),%rbp        # 600e18 <__init_array_end>
  40063a:	53                   	push   %rbx
  40063b:	49 89 f6             	mov    %rsi,%r14
  40063e:	49 89 d5             	mov    %rdx,%r13
  400641:	4c 29 e5             	sub    %r12,%rbp
  400644:	48 83 ec 08          	sub    $0x8,%rsp
  400648:	48 c1 fd 03          	sar    $0x3,%rbp
  40064c:	e8 f7 fd ff ff       	callq  400448 <_init>
  400651:	48 85 ed             	test   %rbp,%rbp
  400654:	74 20                	je     400676 <__libc_csu_init+0x56>
  400656:	31 db                	xor    %ebx,%ebx
  400658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40065f:	00 
  400660:	4c 89 ea             	mov    %r13,%rdx
  400663:	4c 89 f6             	mov    %r14,%rsi
  400666:	44 89 ff             	mov    %r15d,%edi
  400669:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40066d:	48 83 c3 01          	add    $0x1,%rbx
  400671:	48 39 eb             	cmp    %rbp,%rbx
  400674:	75 ea                	jne    400660 <__libc_csu_init+0x40>
  400676:	48 83 c4 08          	add    $0x8,%rsp
  40067a:	5b                   	pop    %rbx
  40067b:	5d                   	pop    %rbp
  40067c:	41 5c                	pop    %r12
  40067e:	41 5d                	pop    %r13
  400680:	41 5e                	pop    %r14
  400682:	41 5f                	pop    %r15
  400684:	c3                   	retq   
  400685:	90                   	nop
  400686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40068d:	00 00 00 

0000000000400690 <__libc_csu_fini>:
  400690:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400694 <_fini>:
  400694:	48 83 ec 08          	sub    $0x8,%rsp
  400698:	48 83 c4 08          	add    $0x8,%rsp
  40069c:	c3                   	retq   
